name: test
on: [push, pull_request]
jobs:
  test:
    strategy:
      matrix:
        # go-version: [1.12.x, 1.13.x]
        go-version: [1.12.x]
        platform: [ubuntu-latest, macos-latest] #, windows-latest]
    runs-on: ${{ matrix.platform }}
    env:
      GOPATH: ${{ github.workspace }}
      QT_VERSION: 5.12.8
      QT_DIR: ${{ github.workspace }}/Qt
      GO111MODULE: off
      GOPROXY: https://goproxy.io
    steps:
    - name: Linux prerequisites 
      if: matrix.platform == 'ubuntu-latest'
      run: |
        sudo apt update
        sudo apt-get -y install build-essential libglu1-mesa-dev libpulse-dev libglib2.0-dev

    - name: Install Go
      uses: actions/setup-go@v1
      with:
        go-version: ${{ matrix.go-version }}

    - name: Install Qt for linux
      if: matrix.platform == 'ubuntu-latest'
      uses: jurplel/install-qt-action@v2.7.1
      with:
        version: 5.12.8
        host: linux
        target: desktop
        dir: ${{ github.workspace }}

    - name: Install Qt for macOS
      if: matrix.platform == 'macos-latest'
      uses: jurplel/install-qt-action@v2.7.1
      with:
        version: 5.12.8
        host: mac
        target: desktop
        dir: ${{ github.workspace }}

    - name: Get Qt binding for Go
      run: go get -v github.com/therecipe/qt/cmd/...

    - name: Checkout code
      uses: actions/checkout@v2
      with:
        path: ./src/github.com/${{ github.repository }}

    - name: Free disk space
      if: matrix.platform == 'ubuntu-latest'
      run: |
        sudo swapoff -a
        sudo rm -f /swapfile
        sudo apt clean

    - name: Check bindings
      run: |
        cd ./src/github.com/therecipe/qt
        git rev-parse HEAD
    
    # - name: Checkout Old bindings 
    #   run: |
    #     mv ${{ github.workspace }}/bin/qtdeploy  ${{ github.workspace }}/bin/qtdeploy.mv
    #     mv ${{ github.workspace }}/bin/qtminimal ${{ github.workspace }}/bin/qtminimal.mv
    #     mv ${{ github.workspace }}/bin/qtmoc     ${{ github.workspace }}/bin/qtmoc.mv
    #     mv ${{ github.workspace }}/bin/qtrcc     ${{ github.workspace }}/bin/qtrcc.mv
    #     mv ${{ github.workspace }}/bin/qtsetup   ${{ github.workspace }}/bin/qtsetup.mv
    #     cd ${{ github.workspace }}/src/github.com/sirupsen/logrus
    #     git checkout b70d15e20
    #     cd ${{ github.workspace }}/src/github.com/therecipe/qt
    #     git checkout 4ee12d6ea
    #     cd ${{ github.workspace }}/src/github.com/therecipe/qt/cmd/qtdeploy
    #     go build main.go
    #     mv ${{ github.workspace }}/src/github.com/therecipe/qt/cmd/qtdeploy/main ${{ github.workspace }}/bin/qtdeploy
    #     cd ${{ github.workspace }}/src/github.com/therecipe/qt/cmd/qtminimal
    #     go build main.go
    #     mv ${{ github.workspace }}/src/github.com/therecipe/qt/cmd/qtminimal/main ${{ github.workspace }}/bin/qtminimal
    #     cd ${{ github.workspace }}/src/github.com/therecipe/qt/cmd/qtmoc
    #     go build main.go
    #     mv ${{ github.workspace }}/src/github.com/therecipe/qt/cmd/qtmoc/main ${{ github.workspace }}/bin/qtmoc
    #     cd ${{ github.workspace }}/src/github.com/therecipe/qt/cmd/qtrcc
    #     go build main.go
    #     mv ${{ github.workspace }}/src/github.com/therecipe/qt/cmd/qtrcc/main ${{ github.workspace }}/bin/qtrcc
    #     cd ${{ github.workspace }}/src/github.com/therecipe/qt/cmd/qtsetup
    #     go build main.go
    #     mv ${{ github.workspace }}/src/github.com/therecipe/qt/cmd/qtsetup/main ${{ github.workspace }}/bin/qtsetup


    - name: Generate Qt bindings
      run: $(go env GOPATH)/bin/qtsetup

    - name: Get dependencies
      run: |
        go get -v -t -d github.com/${{ github.repository }}/editor
        cd ${{ github.workspace }}/src/github.com/${{ github.repository }}/cmd/goneovim
        $(go env GOPATH)/bin/qtmoc

    - name: Test
      run: go test github.com/${{ github.repository }}/editor

    - name: Build
      run: |
        cd ${{ github.workspace }}/src/github.com/${{ github.repository }}/cmd/goneovim
        $(go env GOPATH)/bin/qtdeploy build desktop

    - name: Add executable
      if: matrix.platform == 'ubuntu-latest'
      run: |
        cd ${{ github.workspace }}/src/github.com/${{ github.repository }}/cmd/goneovim/deploy/linux
        chmod u+x goneovim QtWebEngineProcess

    # To fix @rpath probrem
    # - name: Copy dylib
    #   if: matrix.platform == 'macos-latest'
    #   run: |
    #     cd ${{ github.workspace }}/src/github.com/${{ github.repository }}/cmd/goneovim/deploy/darwin/goneovim.app/Contents
    #     mkdir Frameworks/QtWebEngineCore.framework/Helpers/QtWebEngineProcess.app/Contents/Frameworks
    #     cp -pR Frameworks/QtCore.framework             Frameworks/QtWebEngineCore.framework/Helpers/QtWebEngineProcess.app/Contents/Frameworks
    #     cp -pR Frameworks/QtGui.framework              Frameworks/QtWebEngineCore.framework/Helpers/QtWebEngineProcess.app/Contents/Frameworks
    #     cp -pR Frameworks/QtNetwork.framework          Frameworks/QtWebEngineCore.framework/Helpers/QtWebEngineProcess.app/Contents/Frameworks
    #     cp -pR Frameworks/QtPositioning.framework      Frameworks/QtWebEngineCore.framework/Helpers/QtWebEngineProcess.app/Contents/Frameworks
    #     cp -pR Frameworks/QtQml.framework              Frameworks/QtWebEngineCore.framework/Helpers/QtWebEngineProcess.app/Contents/Frameworks
    #     cp -pR Frameworks/QtQuick.framework            Frameworks/QtWebEngineCore.framework/Helpers/QtWebEngineProcess.app/Contents/Frameworks
    #     cp -pR Frameworks/QtWidgets.framework          Frameworks/QtWebEngineCore.framework/Helpers/QtWebEngineProcess.app/Contents/Frameworks
    #     cp -pR Frameworks/QtWebChannel.framework       Frameworks/QtWebEngineCore.framework/Helpers/QtWebEngineProcess.app/Contents/Frameworks
    #     mkdir Frameworks/QtWebEngineCore.framework/Helpers/QtWebEngineProcess.app/Contents/Frameworks/QtWebEngineCore.framework
    #     cd Frameworks/QtWebEngineCore.framework
    #     cp -fpR Resources Helpers/QtWebEngineProcess.app/Contents/Frameworks/QtWebEngineCore.framework/
    #     mkdir Helpers/QtWebEngineProcess.app/Contents/Frameworks/QtWebEngineCore.framework/Versions
    #     mkdir Helpers/QtWebEngineProcess.app/Contents/Frameworks/QtWebEngineCore.framework/Versions/5
    #     mkdir Helpers/QtWebEngineProcess.app/Contents/Frameworks/QtWebEngineCore.framework/Versions/Current
    #     cp -pR Versions/5/QtWebEngineCore       Helpers/QtWebEngineProcess.app/Contents/Frameworks/QtWebEngineCore.framework/Versions/5/
    #     cp -pR Versions/5/Resources             Helpers/QtWebEngineProcess.app/Contents/Frameworks/QtWebEngineCore.framework/Versions/5/
    #     cp -pR Versions/Current/QtWebEngineCore Helpers/QtWebEngineProcess.app/Contents/Frameworks/QtWebEngineCore.framework/Versions/Current/
    #     cp -pR Versions/Current/Resources       Helpers/QtWebEngineProcess.app/Contents/Frameworks/QtWebEngineCore.framework/Versions/Current/
        
    - name: Upload for linux
      if: matrix.platform == 'ubuntu-latest'
      uses: actions/upload-artifact@v1
      with:
        name: Goneovim-latest-linux
        path: ${{ github.workspace }}/src/github.com/${{ github.repository }}/cmd/goneovim/deploy/linux

    - name: Upload for macos
      if: matrix.platform == 'macos-latest'
      uses: actions/upload-artifact@v1
      with:
        name: Goneovim-latest-macos
        path: ${{ github.workspace }}/src/github.com/${{ github.repository }}/cmd/goneovim/deploy/darwin


  build-for-windows:
    strategy:
      matrix:
        platform: [windows-latest]
    runs-on: ${{ matrix.platform }}
    env:
      GOPATH: ${{ github.workspace }}
      GOROOT: ${{ github.workspace }}\go-root
      GOROOT_BOOTSTRAP: ${{ github.workspace }}\go-boot
      GOROOT_FINAL: ${{ github.workspace }}\go-boot
      GOVSVARSPATH: ${{ github.workspace }}\BuildTools\VC\Auxiliary\Build\vcvars64.bat
      CGO_ENABLED: 0
      QT_VERSION: 5.12.8
      QT_DIR: ${{ github.workspace }}\Qt
      QT_MSVC: true
      GO111MODULE: off
    steps:

    - name: Intall MSVC 2017 Visual C++ Buildtools
      run : |
        curl -sL --retry 10 --retry-delay 60 -O https://aka.ms/vs/15/release/vs_buildtools.exe
        New-Item -Path BuildTools -ItemType Directory 
        .\vs_BuildTools.exe --quiet --wait --norestart --nocache --installPath ${{ github.workspace }}\BuildTools --add Microsoft.VisualStudio.Workload.VCTools --includeOptional
        Start-Sleep -s 1200

    - name: Check MSVC 2017 Visual C++ Buildtools installation
      run : |
        dir ${{ github.workspace }}\
        dir ${{ github.workspace }}\BuildTools
        dir ${{ github.workspace }}\BuildTools\VC
        dir ${{ github.workspace }}\BuildTools\VC\Tools
        dir ${{ github.workspace }}\BuildTools\VC\Tools\MSVC
        dir ${{ github.workspace }}\BuildTools\VC\Tools\MSVC\14.16.27023
        dir ${{ github.workspace }}\BuildTools\VC\Tools\MSVC\14.16.27023\bin
        dir ${{ github.workspace }}\BuildTools\VC\Tools\MSVC\14.16.27023\bin\Hostx64
        dir ${{ github.workspace }}\BuildTools\VC\Tools\MSVC\14.16.27023\bin\Hostx64\x64

    - name: Install Qt
      uses: jurplel/install-qt-action@v2.7.1
      with:
        version: 5.12.8
        host: windows
        target: desktop
        dir: ${{ github.workspace }}

    - name: Install Go
      continue-on-error: true
      run: |
        curl -sL --retry 10 --retry-delay 60 -O https://dl.google.com/go/go1.11.9.windows-amd64.zip
        expand-archive -path go1.11.9.windows-amd64.zip -destinationpath .
        Move-Item -Path go -Destination go-root

    - name: Get Qt binding for Go
      run: |
        ${{ github.workspace }}\go-root\bin\go.exe get -v -tags=no_env github.com/therecipe/qt/cmd/...

    - name: Checkout code
      uses: actions/checkout@v2
      with:
        path: .\src\github.com\${{ github.repository }}

    - name: Set PATH
      run: |
        $env:PATH = "${{ github.workspace }}\\go-root\\bin;$env:PATH"
        $env:PATH = "${{ github.workspace }}\\BuildTools\\VC\\Tools\\MSVC\\14.16.27023\\bin\\Hostx64\\x64;$env:PATH"
        echo "::set-env name=PATH::$env:PATH"

    # - name: Get Old Qt binding for Go
    #   run: |
    #     Move-Item -Path ${{ github.workspace }}\bin\qtdeploy.exe  -Destination ${{ github.workspace }}\bin\qtdeploy.exe.old  -Force
    #     Move-Item -Path ${{ github.workspace }}\bin\qtminimal.exe -Destination ${{ github.workspace }}\bin\qtminimal.exe.old -Force
    #     Move-Item -Path ${{ github.workspace }}\bin\qtmoc.exe     -Destination ${{ github.workspace }}\bin\qtmoc.exe.old     -Force
    #     Move-Item -Path ${{ github.workspace }}\bin\qtrcc.exe     -Destination ${{ github.workspace }}\bin\qtrcc.exe.old     -Force
    #     Move-Item -Path ${{ github.workspace }}\bin\qtsetup.exe   -Destination ${{ github.workspace }}\bin\qtsetup.exe.old   -Force
    #     cd ${{ github.workspace }}\src\github.com\sirupsen\logrus
    #     git checkout b70d15e20
    #     cd ${{ github.workspace }}\src\github.com\therecipe\qt
    #     git checkout 4ee12d6ea
    #     cd ${{ github.workspace }}\src\github.com\therecipe\qt\cmd\qtdeploy
    #     go build main.go
    #     Move-Item -Path ${{ github.workspace }}\src\github.com\therecipe\qt\cmd\qtdeploy\main.exe  -Destination ${{ github.workspace }}\bin\qtdeploy.exe -Force
    #     cd ${{ github.workspace }}\src\github.com\therecipe\qt\cmd\qtminimal
    #     go build main.go
    #     Move-Item -Path ${{ github.workspace }}\src\github.com\therecipe\qt\cmd\qtminimal\main.exe -Destination ${{ github.workspace }}\bin\qtminimal.exe -Force
    #     cd ${{ github.workspace }}\src\github.com\therecipe\qt\cmd\qtmoc
    #     go build main.go
    #     Move-Item -Path ${{ github.workspace }}\src\github.com\therecipe\qt\cmd\qtmoc\main.exe     -Destination ${{ github.workspace }}\bin\qtmoc.exe -Force
    #     cd ${{ github.workspace }}\src\github.com\therecipe\qt\cmd\qtrcc
    #     go build main.go
    #     Move-Item -Path ${{ github.workspace }}\src\github.com\therecipe\qt\cmd\qtrcc\main.exe     -Destination ${{ github.workspace }}\bin\qtrcc.exe -Force
    #     cd ${{ github.workspace }}\src\github.com\therecipe\qt\cmd\qtsetup
    #     go build main.go
    #     Move-Item -Path ${{ github.workspace }}\src\github.com\therecipe\qt\cmd\qtsetup\main.exe   -Destination ${{ github.workspace }}\bin\qtsetup.exe -Force

    - name: Enable experimental Go features Step.1
      continue-on-error: true
      run: |
        git clone https://github.com/golang/go.git ${{ github.workspace }}\go-msvc
        cd ${{ github.workspace }}\go-msvc
        git fetch "https://go.googlesource.com/go" refs/changes/46/133946/5
        Git checkout FETCH_HEAD
        echo "devel +6741b7009d" > VERSION

    - name: Enable experimental Go features Step.2
      continue-on-error: true
      run: |
        cd ${{ github.workspace }}\go-msvc
        curl -sL --retry 10 --retry-delay 60 https://github.com/golang/go/commit/e4535772ca3f11084ee5fa4d4bd3a542e143b80f.patch | patch -p1 -R

    - name: Enable experimental Go features Step.3
      continue-on-error: true
      run: |
        cd ${{ github.workspace }}\go-msvc
        curl -sL --retry 10 --retry-delay 60 https://github.com/golang/go/commit/f10815898c0732e2e6cdb697d6f95f33f8650b4e.patch | patch -p1 -R

    - name: Enable experimental Go features Step.4
      continue-on-error: true
      run: |
        cd ${{ github.workspace }}
        Move-Item -Path go-root -Destination go-boot
        Move-Item -Path go-msvc -Destination go-root
        cd ${{ github.workspace }}\go-root\src
        .\make.bat

    - name: Generate Qt bindings
      run: ${{ github.workspace }}\bin\qtsetup.exe
      shell: cmd

    - name: Retrieving dependencies
      continue-on-error: true
      run: |
        go get -v -d github.com/${{ github.repository }}/editor

    # - name: Convert to compatible sources on Qt5.12
    #   run: |
    #     cd ${{ github.workspace }}\src\github.com\${{ github.repository }}
    #     $data=Get-Content  .\editor\workspace.go | % { $_ -replace "NewQVariant31", "NewQVariant33" }
    #     $data | Out-File   .\editor\workspace.go -Encoding UTF8
    #     $data=Get-Content  .\editor\popupmenu.go | % { $_ -replace "AddWidget2", "AddWidget" }
    #     $data | Out-File   .\editor\popupmenu.go -Encoding UTF8
    #     $data=Get-Content  .\editor\message.go | % { $_ -replace "AddWidget2", "AddWidget" }
    #     $data | Out-File   .\editor\message.go -Encoding UTF8
    #     $data=Get-Content  .\editor\screen.go | % { $_ -replace "DrawText6", "DrawText5" }
    #     $data | Out-File   .\editor\screen.go -Encoding UTF8
    #     $data=Get-Content  .\editor\screen.go | % { $_ -replace "NewQVariant5", "NewQVariant2" }
    #     $data | Out-File   .\editor\screen.go -Encoding UTF8
    #     $ch="), text, gui.NewQTextOption2(core.Qt__AlignVCenter),"
    #     $rep="), int(core.Qt__AlignVCenter), text, nil,"
    #     $data=Get-Content  .\editor\screen.go | % { $_ -replace [regex]::Escape($ch), $rep }
    #     $data | Out-File   .\editor\screen.go -Encoding UTF8
    #     $data=Get-Content  .\util\utils.go | % { $_ -replace "SetOffset2", "SetOffset3" }
    #     $data | Out-File   .\util\utils.go -Encoding UTF8
    #     git diff

    # - name: Test
    #   run: go test github.com/${{ github.repository }}/editor

    - name: Build
      run: |
        cd ${{ github.workspace }}\src\github.com\${{ github.repository }}\cmd\goneovim
        ${{ github.workspace }}\bin\qtmoc.exe
        ${{ github.workspace }}\bin\qtdeploy build desktop

    - name: Upload for windows
      uses: actions/upload-artifact@v1
      with:
        name: Goneovim-latest-win64
        path: ${{ github.workspace }}/src/github.com/${{ github.repository }}/cmd/goneovim/deploy/windows

